---

- name:  Test for Boxborough node
  shell: hostname | grep bxb
  ignore_errors: true
  register: test_for_bxb

- name: Ensure yum will use the proxy
  ini_file:
    dest: /etc/yum.conf
    section: main
    option: proxy
    value: http://proxy.esl.cisco.com:80

- name: Ensure subscription-manager will use the proxy
  ini_file:
    dest: /etc/rhsm/rhsm.conf
    section: server
    option: "{{ item.option }}"
    value: "{{ item.value }}"
  with_items:
    - {option: 'proxy_hostname', value: 'proxy.esl.cisco.com'}
    - {option: 'proxy_port', value: '80'}

- name:  Test for ifcfg-user already configured
  shell: grep IPADDR /etc/sysconfig/network-scripts/ifcfg-user
  ignore_errors: true
  register: ifcfg_user_cfgd

#- name:  Config static route to overcloud nodes if not configured for BXB
#  shell: >
#    sed -i '$i/sbin/route add -net 172.20.208.0/20 gw 172.20.208.1' /etc/rc.local;
#    sed -i 's/BOOTPROTO=dhcp/BOOTPROTO=static/' /etc/sysconfig/network-scripts/ifcfg-user;
#    sed -i 's/PEERDNS=no/IPADDR=172.20.208.85/' /etc/sysconfig/network-scripts/ifcfg-user;
#    sed -i '$iNETMASK=255.255.240.0' /etc/sysconfig/network-scripts/ifcfg-user;
#    systemctl restart network
#  ignore_errors: true
#  when: test_for_bxb|success and ifcfg_user_cfgd|failed

- name: Set RHEL Channels
  shell: subscription-manager repos --enable=rhel-7-server-openstack-7.0-director-rpms --enable=rhel-7-server-openstack-7.0-rpms
  # rhel-server-rhscl-7-rpms
  when: not osp_use_partner_repo

- name: Upgrade RHEL
  shell: >
    subscription-manager register --username=CVG_ENG_ssalunkh --password=Cisco123!
    subscription-manager register;
    subscription-manager attach --pool 8a85f98c60c5e69f0160c6c9e6da0e81
    subscription-manager repos --enable=rhel-7-server-rpms --enable=rhel-7-server-extras-rpms --enable=rhel-7-server-rh-common-rpms --enable=rhel-ha-for-rhel-7-server-rpms --enable=rhel-7-serveropenstack-10-rpms

- name: Setup Yum Partner Repos
  environment: proxy_env
  get_url: url={{ item.url }} dest=/etc/yum.repos.d/{{ item.name }} force=true
  with_items: "{{ yum_repos }}"
  when: osp_use_partner_repo

# set proxy via kickstart
#- name: Set yum proxy
#  shell: 'grep -q "proxy=" /etc/yum.conf || echo "proxy={{ proxy }}" >> /etc/yum.conf'
#  when: use_yum_proxy

#- name: Set yum timeout
#  shell: 'grep -q "timeout=" /etc/yum.conf || echo "timeout={{ yum_timeout }}" >> /etc/yum.conf'

- name: yum update (the world)
  yum: name=* state=latest update_cache=yes

- name: yum update the kernel
  yum: name=kernel state=latest update_cache=yes

#- name: Install chrony
#  yum: name=chrony
#
#- name: Enable chronyd service
#  service: name=chronyd state=started enabled=yes

# command line client name change between osp 7 and 8
#- name: Install python-rdomanager-oscplugin
#  yum: name=python-rdomanager-oscplugin
#  when: osp_version == 7

- name: Install python-tripleoclient
  yum: name=python-tripleoclient

- name: Install openstack-tripleo-heat-templates rpm
  yum:
    name: openstack-tripleo-heat-templates
    state: present

#- name: Applying https://review.openstack.org/#/c/548686/
#  shell: |
#    set -o pipefail
#    curl 'https://review.openstack.org/changes/548686/revisions/afa48621358599100cfeeab6b3008ee71a16d444/patch?download' | base64 -d |patch -p1
#  args:
#    chdir: /usr/share/openstack-tripleo-heat-templates

#- name: Install puppet-neutron rpm
#  yum:
#    name: puppet-neutron
#    state: present

#- name: Install patchutils
#  yum: name=patchutils

#- name: Applying https://review.openstack.org/#/c/537421/
#  shell: |
#    set -o pipefail
#    curl 'https://review.openstack.org/changes/537421/revisions/6a0f77224c3a26d393fbca341f3ee873071bd773/patch?download' | base64 -d | filterdiff -i *.pp |patch manifests/plugins/ml2/cisco/ucsm.pp
#  args:
#    chdir: /usr/share/openstack-puppet/modules/neutron

- name: Create Stack user
  # password=password
  user: name=stack groups=wheel append=yes password=$6$rounds=100000$AZq2DbEdgByHTu8s$J20qsZT3AcxDB47N.Qoscv6aI91pIsI7pH.yPfMXwDOhgOdf7bqVqoPqexA9mKJuC.kXArdth67Q7AbN8416g.

- name: Check if stack user is in sudo
  stat: path=/etc/sudoers.d/stack
  register: stack_in_sudo

- name: Add Stack user to sudo
  shell: 'echo "Defaults:nova !requiretty\nstack ALL=(root) NOPASSWD:ALL" | tee -a /etc/sudoers.d/stack && chmod 0440 /etc/sudoers.d/stack'
  when: not stack_in_sudo.stat.exists

- name: Disable requiretty
  lineinfile: dest=/etc/sudoers state=absent regexp="^Defaults\ *requiretty"

- name: Add stack user to sudo
  copy:
    content: stack ALL=(root) NOPASSWD:ALL
    dest: /etc/sudoers.d/stack
    mode: 0440

# this action is done to try and prevent the following error during undercloud install:
# WARNING: map-services has been deprecated.  Please use the svc-map element.
# Failed to issue method call: Access denied
# INFO: 2015-12-03 13:30:31,512 -- ############### End stdout/stderr logging ###############
# ERROR: 2015-12-03 13:30:31,513 --     Hook FAILED.
# ERROR: 2015-12-03 13:30:31,513 -- Failed running command ['dib-run-parts', u'/tmp/tmpvQ4HhO/pre-install.d']
## TODO: This fails on the initial deploy, not sure if it is needed anymore after moving to 7.2
#- name: Restart system daemons & iptables
#  shell: 'systemctl daemon-reload && systemctl restart iptables'


#- name: stack user sudo defaults
#  lineinfile: line="Defaults:nova !requiretty" dest="/etc/sudoers.d/stack" create=yes
#
#- name: stack sudoers
#  lineinfile: line="stack ALL=(root) NOPASSWD:ALL" dest="/etc/sudoers.d/stack" create=no

#- name: Set Proxy
#  shell: 'grep -q {{ item.key }} ~stack/.bash_profile || echo "export {{ item.key }}={{ item.value }}" >> ~stack/.bash_profile'
#  with_dict: "{{ proxy_env }}"

#- name: Setup answer file
- name:  Writing undercloud.conf
  template: src=undercloud.conf dest=/home/stack/undercloud.conf owner=stack group=stack

- name: Install the Undercloud
  sudo_user: stack
  environment: proxy_env
  shell: cd /home/stack && openstack undercloud install
  # up to 2 hours poll every minute
  async: 7200
  poll: 60
  when: deploy_undercloud

- name: Adjust Allowed hosts
  lineinfile: line="\g<1>', '{{ director_node_ssh_ip }}' ]" dest=/etc/openstack-dashboard/local_settings backrefs=yes regexp="^(ALLOWED_HOSTS = .*localhost).*"
  register: update_allowed_hosts
  when: osp_version == 7

- name: Restart HTTPD
  service: name=httpd state=restarted
  when: osp_version == 7 and update_allowed_hosts|changed

# lets make debugging a little easier
- name: Add 'source stackrc' to .bash_profile
  lineinfile:
    dest: /home/stack/.bash_profile
    line: "source ~/stackrc"
    insertafter: EOF

# openstack complete isn't working -- "No module named ipaddress"
#- name: Add openstack complete to .bash_profile
#  lineinfile:
#    dest: /home/stack/.bash_profile
#    line: "source <(openstack complete)"
#    insertafter: EOF

- name: Alias ironic-discoverd reset
  lineinfile:
    dest: /home/stack/.bash_profile
    line: "alias ironic-reset='sudo rm /var/lib/ironic-discoverd/discoverd.sqlite && sudo systemctl restart openstack-ironic-discoverd'"
    insertafter: EOF

- name: Add alias for heat-resources
  lineinfile:
    dest: /home/stack/.bash_profile
    line: "alias heat-resources='heat resource-list overcloud | grep -v COMPLETE'"
    insertafter: EOF

- name: Check if default subnet name is set
  sudo_user: stack
  shell: source /home/stack/stackrc && neutron subnet-list --format csv --quote minimal --column id --column name | grep -q default-subnet
  ignore_errors: true
  register: default_subnet_has_name

- name: Update default subnet name
  sudo_user: stack
  shell: source /home/stack/stackrc && neutron subnet-update $(neutron subnet-list --format csv --quote minimal --column id | sed -n 2p) --name default-subnet
  when: default_subnet_has_name|failed

# this isn't very idempotent
- name: Set DNS Server
  sudo_user: stack
  shell: source /home/stack/stackrc && neutron subnet-update default-subnet --dns-nameserver {{ dns_server_1 }}
  when: default_subnet_has_name|failed
