- name: Delete folder if existed bedore
  shell: rm -rf {{ item }}
  with_items: "{{ tempest_dir }}"

- name: Create directory
  file: path="{{ tempest_dir }}" state=directory

- name: Clone tempest
  git: repo=https://github.com/{{ tempest_repo }}/tempest.git
       dest={{ tempest_dir }}/tempest
       version={{ tempest_branch }}

- name: Clone openstack-sqe
  git: repo=https://github.com/cisco-openstack/openstack-sqe.git
       dest={{ tempest_dir }}/openstack-sqe
       version=master

- name: copy etc folder
  shell: yes | cp -rf /etc/redhat-certification-openstack/* {{ tempest_dir }}/tempest/etc/

- name: upload additional lines for tempest.conf file
  template: src=tempest_cisco.cfg dest={{ tempest_dir }}/tempest/etc/tempest_cisco.conf
  when: sw_2_name is defined

- name: modify tempest.conf file
  shell: cat tempest_cisco.conf >> tempest.conf
        chdir={{ tempest_dir }}/tempest/etc

- name: copy cirros image to the etc folder
  shell: cp /usr/share/openstack-tempest/etc/cirros-0.3.1-x86_64-disk.img {{ tempest_dir }}/tempest/etc/

- name: write file private key for git
  get_url: url={{ sjc_apl_gerrit3_private_key }}
           dest=/root/rsa
           mode=0600
  when: specific is defined

- name: Add git repo to ssh known_hosts
  shell: ssh-keyscan -p 29418 -H sjc-apl-gerrit3.cisco.com >> ~/.ssh/known_hosts
  when: specific is defined

- name: Add ssh keys of sw1 to known_hosts
  shell: ssh-keyscan -H {{ sw_1 }} >> ~/.ssh/known_hosts
  when: sw_1 is defined and specific is defined

- name: Add ssh keys of sw2 to known_hosts
  shell: ssh-keyscan -H {{ sw_2 }} >> ~/.ssh/known_hosts
  when: sw_2 is defined and specific is defined

- name: Download tests
  git: repo=ssh://{{ sjc_apl_gerrit3_user }}@sjc-apl-gerrit3.cisco.com:29418/os-devtest/OpenStack-DevTest
       dest={{ tempest_dir }}/tempest/tempest/thirdparty/cir
       accept_hostkey=yes
       force=yes
       recursive=no
       key_file=/root/rsa
  environment:
       GIT_SSL_NO_VERIFY: true
       GIT_SSH_COMMAND: "ssh -i /root/rsa"
  when: specific is defined

- name: install tox
  shell: pip install tox

- name: Create venv and install requirements
  shell: tox --notest -efull
          chdir={{ tempest_dir }}/tempest

- name: install pip libs
  shell: source .tox/full/bin/activate && pip install junitxml
          chdir={{ tempest_dir }}/tempest/

- name: install pip libs
  shell: source .tox/full/bin/activate && pip install  pexpect
          chdir={{ tempest_dir }}/tempest/

- name: install pip libs
  shell: source .tox/full/bin/activate && pip install wget http://172.29.173.233/pyATS/predcore-1.0.2.tar.gz
          chdir={{ tempest_dir }}/tempest/

- name: install pip libs
  shell: source .tox/full/bin/activate && pip install wget http://172.29.173.233/pyATS/parsercore-1.0.4.tar.gz
          chdir={{ tempest_dir }}/tempest/

- name: install pip libs
  shell: source .tox/full/bin/activate && pip install wget http://172.29.173.233/pyATS/parsergen-1.0.2.tar.gz
          chdir={{ tempest_dir }}/tempest/

- name: install pip libs
  shell: source .tox/full/bin/activate && pip install junitxml
          chdir={{ tempest_dir }}/tempest/

- debug: var=test_names

- name: Execute tests
  shell: source .tox/full/bin/activate && testr init && testr run  --parallel --concurrency 1 {{ test_names }}
        chdir={{ tempest_dir }}/tempest/
  when: test_names is defined
  ignore_errors: yes

- name: Generate a report
  shell: source .tox/full/bin/activate && testr last --subunit | subunit-1to2 | subunit2junitxml --output-to=tempest_results.xml
        chdir={{ tempest_dir }}/tempest/
  when: test_names is defined
  ignore_errors: yes

- name: Upload report to workspace node
  fetch: src={{ tempest_dir }}/tempest/tempest_results.xml dest={{ lookup('env','WORKSPACE') }}/artefacts/
        flat=yes
  when: test_names is defined

- name: Upload tempest.conf to workspace node
  fetch: src={{ tempest_dir }}/tempest/etc/tempest.conf dest={{ lookup('env','WORKSPACE') }}/artefacts/
        flat=yes
  when: test_names is defined

- name: Generate a report in CSV format
  shell: source .tox/full/bin/activate && testr last --subunit | subunit-1to2 | subunit2csv --output-to=tempest_results.csv
        chdir={{ tempest_dir }}/tempest/
  when: test_names is defined
  ignore_errors: yes

- name: delete unused lines
  shell:  sed "/^[^\"]/d" -i tempest_results.csv
           chdir={{ tempest_dir }}/tempest/
  when: test_names is defined
  ignore_errors: yes
